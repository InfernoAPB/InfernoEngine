/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var SharedEnums_pb = require('./SharedEnums_pb.js');
goog.exportSymbol('proto.com.inferno.protos.CreateUserResponseProto', null, global);
goog.exportSymbol('proto.com.inferno.protos.User', null, global);
goog.exportSymbol('proto.com.inferno.protos.UserCreate', null, global);
goog.exportSymbol('proto.com.inferno.protos.UserProfile', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.inferno.protos.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.inferno.protos.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.inferno.protos.User.displayName = 'proto.com.inferno.protos.User';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.inferno.protos.User.prototype.toObject = function(opt_includeInstance) {
  return proto.com.inferno.protos.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.inferno.protos.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fbId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    udid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.inferno.protos.User}
 */
proto.com.inferno.protos.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.inferno.protos.User;
  return proto.com.inferno.protos.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.inferno.protos.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.inferno.protos.User}
 */
proto.com.inferno.protos.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFbId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUdid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.inferno.protos.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.inferno.protos.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.inferno.protos.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFbId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUdid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.inferno.protos.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.inferno.protos.User.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.inferno.protos.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.inferno.protos.User.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fb_id = 3;
 * @return {string}
 */
proto.com.inferno.protos.User.prototype.getFbId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.inferno.protos.User.prototype.setFbId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string udid = 4;
 * @return {string}
 */
proto.com.inferno.protos.User.prototype.getUdid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.inferno.protos.User.prototype.setUdid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string platform = 5;
 * @return {string}
 */
proto.com.inferno.protos.User.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.inferno.protos.User.prototype.setPlatform = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.inferno.protos.UserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.inferno.protos.UserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.inferno.protos.UserCreate.displayName = 'proto.com.inferno.protos.UserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.inferno.protos.UserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.com.inferno.protos.UserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.inferno.protos.UserCreate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.UserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fbId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    udid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.inferno.protos.UserCreate}
 */
proto.com.inferno.protos.UserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.inferno.protos.UserCreate;
  return proto.com.inferno.protos.UserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.inferno.protos.UserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.inferno.protos.UserCreate}
 */
proto.com.inferno.protos.UserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFbId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUdid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.inferno.protos.UserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.inferno.protos.UserCreate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.inferno.protos.UserCreate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.UserCreate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFbId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUdid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.inferno.protos.UserCreate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserCreate.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fb_id = 2;
 * @return {string}
 */
proto.com.inferno.protos.UserCreate.prototype.getFbId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserCreate.prototype.setFbId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string udid = 3;
 * @return {string}
 */
proto.com.inferno.protos.UserCreate.prototype.getUdid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserCreate.prototype.setUdid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string platform = 4;
 * @return {string}
 */
proto.com.inferno.protos.UserCreate.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserCreate.prototype.setPlatform = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.inferno.protos.CreateUserResponseProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.inferno.protos.CreateUserResponseProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.inferno.protos.CreateUserResponseProto.displayName = 'proto.com.inferno.protos.CreateUserResponseProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.toObject = function(opt_includeInstance) {
  return proto.com.inferno.protos.CreateUserResponseProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.inferno.protos.CreateUserResponseProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.CreateUserResponseProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.inferno.protos.CreateUserResponseProto}
 */
proto.com.inferno.protos.CreateUserResponseProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.inferno.protos.CreateUserResponseProto;
  return proto.com.inferno.protos.CreateUserResponseProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.inferno.protos.CreateUserResponseProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.inferno.protos.CreateUserResponseProto}
 */
proto.com.inferno.protos.CreateUserResponseProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {!proto.com.inferno.protos.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.inferno.protos.CreateUserResponseProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.inferno.protos.CreateUserResponseProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.CreateUserResponseProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.inferno.protos.CreateUserResponseProto.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResponseStatus status = 2;
 * @return {!proto.com.inferno.protos.ResponseStatus}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.getStatus = function() {
  return /** @type {!proto.com.inferno.protos.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.com.inferno.protos.ResponseStatus} value */
proto.com.inferno.protos.CreateUserResponseProto.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes payload = 3;
 * @return {!(string|Uint8Array)}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payload = 3;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.com.inferno.protos.CreateUserResponseProto.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/** @param {!(string|Uint8Array)} value */
proto.com.inferno.protos.CreateUserResponseProto.prototype.setPayload = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.inferno.protos.UserProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.inferno.protos.UserProfile.repeatedFields_, null);
};
goog.inherits(proto.com.inferno.protos.UserProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.inferno.protos.UserProfile.displayName = 'proto.com.inferno.protos.UserProfile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.inferno.protos.UserProfile.repeatedFields_ = [5,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.inferno.protos.UserProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.com.inferno.protos.UserProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.inferno.protos.UserProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.UserProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    xp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gold: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gems: jspb.Message.getFieldWithDefault(msg, 4, 0),
    slotsList: jspb.Message.getRepeatedField(msg, 5),
    trophies: jspb.Message.getFieldWithDefault(msg, 6, 0),
    clanid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    itemsunlockedList: jspb.Message.getRepeatedField(msg, 8),
    itemsinprogressList: jspb.Message.getRepeatedField(msg, 9),
    platform: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.inferno.protos.UserProfile}
 */
proto.com.inferno.protos.UserProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.inferno.protos.UserProfile;
  return proto.com.inferno.protos.UserProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.inferno.protos.UserProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.inferno.protos.UserProfile}
 */
proto.com.inferno.protos.UserProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGold(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGems(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addSlots(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrophies(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClanid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addItemsunlocked(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addItemsinprogress(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.inferno.protos.UserProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.inferno.protos.UserProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.inferno.protos.UserProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.inferno.protos.UserProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getXp();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getGold();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGems();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getTrophies();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getClanid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getItemsunlockedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getItemsinprogressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.com.inferno.protos.UserProfile.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserProfile.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 xp = 2;
 * @return {number}
 */
proto.com.inferno.protos.UserProfile.prototype.getXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.inferno.protos.UserProfile.prototype.setXp = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 gold = 3;
 * @return {number}
 */
proto.com.inferno.protos.UserProfile.prototype.getGold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.com.inferno.protos.UserProfile.prototype.setGold = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 gems = 4;
 * @return {number}
 */
proto.com.inferno.protos.UserProfile.prototype.getGems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.com.inferno.protos.UserProfile.prototype.setGems = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string slots = 5;
 * @return {!Array<string>}
 */
proto.com.inferno.protos.UserProfile.prototype.getSlotsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.com.inferno.protos.UserProfile.prototype.setSlotsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.inferno.protos.UserProfile.prototype.addSlots = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.com.inferno.protos.UserProfile.prototype.clearSlotsList = function() {
  this.setSlotsList([]);
};


/**
 * optional int32 trophies = 6;
 * @return {number}
 */
proto.com.inferno.protos.UserProfile.prototype.getTrophies = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.com.inferno.protos.UserProfile.prototype.setTrophies = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string clanid = 7;
 * @return {string}
 */
proto.com.inferno.protos.UserProfile.prototype.getClanid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserProfile.prototype.setClanid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string itemsUnlocked = 8;
 * @return {!Array<string>}
 */
proto.com.inferno.protos.UserProfile.prototype.getItemsunlockedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.com.inferno.protos.UserProfile.prototype.setItemsunlockedList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.inferno.protos.UserProfile.prototype.addItemsunlocked = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.com.inferno.protos.UserProfile.prototype.clearItemsunlockedList = function() {
  this.setItemsunlockedList([]);
};


/**
 * repeated string itemsInProgress = 9;
 * @return {!Array<string>}
 */
proto.com.inferno.protos.UserProfile.prototype.getItemsinprogressList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.com.inferno.protos.UserProfile.prototype.setItemsinprogressList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.inferno.protos.UserProfile.prototype.addItemsinprogress = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.com.inferno.protos.UserProfile.prototype.clearItemsinprogressList = function() {
  this.setItemsinprogressList([]);
};


/**
 * optional string platform = 10;
 * @return {string}
 */
proto.com.inferno.protos.UserProfile.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.inferno.protos.UserProfile.prototype.setPlatform = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, proto.com.inferno.protos);
